# This needs some manual host wrangling before it will work.
#
#  apt-get -y install qemu-kvm qemu-utils
#  Enable ip forwarding in /etc/sysctl
#  Make sure there's a bridge br0 connected to a network with a dhcp server
#  /etc/qemu/bridge.conf needs to contain 'allow br0'
#  iptables -I DOCKER-USER -j ACCEPT (otherwise docker rejects forwarding)
#  A good chunk of luck.

KVMRAM=2G
KVMCPUS=2
KVMCPU=host
KVMNETCONF=-net nic,model=virtio,macaddr=52:54:00:00:00:01 -net bridge,br=br0
KVMKEYS=lctrl-lalt
KVMDISPLAY=-display gtk
# This is the bios that is used
UCODENAME=OVMF_CODE.fd
UCODE=-drive if=pflash,unit=0,format=raw,readonly=on,file=/usr/share/OVMF/$(UCODENAME)
# This is the uefi variable store
UVARSNAME=OVMF_VARS.fd
UVARS=-drive if=pflash,unit=1,format=raw,file=src/$(UVARSNAME)
UEFIBOOT=$(UCODE) $(UVARS)

KVMVGA=-vga vmware
# -vga vmware is to stop grub having issues on startup. Without it, things like
# 'videoinfo' just hang. I found the tip here:
#    https://askubuntu.com/questions/1234203/video-problems-with-efi-boot-on-kvm-qemu

# This doesn't work correctly for some reason. Will need to look into it later
#SM=$(BUILDROOT)/components/smbios
#SMBIOS=-acpitable file=$(SM)/SLIC -acpitable file=$(SM)/MSDM -smbios file=$(SM)/smbios_type_0.bin -smbios file=$(SM)/smbios_type_1.bin
TESTUUID=36e26dd9-91a0-4547-b197-bf28ce57cfe9
SMBIOS=-smbios type=1,manufacturer=HonestRob,product=IsoTest,version=31337,serial=01189998819991197253,uuid=$(TESTUUID)

src/testimg.qcow2: | src/$(UVARSNAME)
	qemu-img create -f qcow2 src/testimg.qcow2 80G

src/OVMF_%.fd:
	@cp /usr/share/OVMF/$(@F) $@

.PHONY: isoclean isotest
isoclean:
	rm -f src/testimg.qcow2 src/OVMF*
	$(MAKE) isotest

# ISOFINAL is from 002-theme
isotest: $(ISOFINAL) | src/testimg.qcow2
	kvm -cpu $(KVMCPU) -accel kvm -smp cpus=$(KVMCPUS) -m $(KVMRAM) $(KVMNETCONF) $(KVMDISPLAY) \
	-cdrom $< $(UEFIBOOT) -drive file=$|,cache=unsafe,discard=ignore,detect-zeroes=off $(KVMVGA) $(SMBIOS)

